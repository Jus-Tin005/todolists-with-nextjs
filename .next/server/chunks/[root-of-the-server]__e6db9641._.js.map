{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///home/khuntunlar/todolists-with-nextjs/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nconst globalForPrisma = global as unknown as {prisma:PrismaClient};\n\nexport const prisma = \nglobalForPrisma.prisma || new PrismaClient({ log:['query'] });\n\nif(process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma;"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM;AAEC,MAAM,SACb,gBAAgB,MAAM,IAAI,IAAI,6IAAY,CAAC;IAAE,KAAI;QAAC;KAAQ;AAAC;AAE3D,wCAA0C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///home/khuntunlar/todolists-with-nextjs/app/api/todos/route.ts"],"sourcesContent":["// GET all, POST create\n\n\nimport { NextResponse } from \"next/server\";\nimport {prisma} from '@/lib/prisma';\n\n\n// Fet todo lists\nexport async function GET(){\n    const todos = await prisma.todo.findMany({\n        orderBy:{id:\"desc\"}\n    });\n    return NextResponse.json(todos);\n}\n\n// Create todo\nexport async function POST(req:Request){\n    const body = await req.json();\n    console.log(body);  \n    const newTodo = await prisma.todo.create({\n        data:{\n            title:body.title\n        }\n    });\n\n    return NextResponse.json(newTodo,{status:201});\n}"],"names":[],"mappings":"AAAA,uBAAuB;;;;;;;AAGvB;AACA;;;AAIO,eAAe;IAClB,MAAM,QAAQ,MAAM,yHAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACrC,SAAQ;YAAC,IAAG;QAAM;IACtB;IACA,OAAO,gJAAY,CAAC,IAAI,CAAC;AAC7B;AAGO,eAAe,KAAK,GAAW;IAClC,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,QAAQ,GAAG,CAAC;IACZ,MAAM,UAAU,MAAM,yHAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACrC,MAAK;YACD,OAAM,KAAK,KAAK;QACpB;IACJ;IAEA,OAAO,gJAAY,CAAC,IAAI,CAAC,SAAQ;QAAC,QAAO;IAAG;AAChD","debugId":null}}]
}